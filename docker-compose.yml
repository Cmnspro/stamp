version: "3.4"
services:

  service:
    build:
      context: .
      target: development
    # ports:
    #   - "8080:8080"
    working_dir: /app
    volumes:
      - .:/app #:delegated
      # - ./.pkg:/go/pkg # enable this to reuse the pkg cache
    depends_on:
      - postgres
      - pgserve
    environment: &SERVICE_ENV
      
      # required: env for sqlboiler and sql-migrate
      PSQL_DBNAME: &PSQL_DBNAME "sample" 
      PSQL_USER: &PSQL_USER "dbuser"
      PSQL_PASS: &PSQL_PASS "9bed16f749d74a3c8bfbced18a7647f5"
      PSQL_HOST: &PSQL_HOST "postgres"
      PSQL_PORT: &PSQL_PORT "5432"
      PSQL_SSLMODE: &PSQL_SSLMODE "disable"
      PSQL_SCHEMA: &PSQL_SCHEMA "public"
      
      # optional: env for postgresql-client apt-get package (psql)
      PGDATABASE: *PSQL_DBNAME
      PGUSER: *PSQL_USER
      PGPASSWORD: *PSQL_PASS
      PGHOST: *PSQL_HOST
      PGPORT: *PSQL_PORT
      PGSSLMODE: *PSQL_SSLMODE

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"

  pgserve:
    build:
      context: .
      target: pgserve
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    environment: *SERVICE_ENV

  postgres:
    image: postgres:12.2-alpine # should be the same version as used in .drone.yml, Dockerfile and live
    container_name: go-mranftl-sample_postgres
    command: "postgres -c 'shared_buffers=128MB' -c 'fsync=off' -c 'synchronous_commit=off' -c 'full_page_writes=off' -c 'max_connections=100' -c 'client_min_messages=warning'"
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: *PSQL_DBNAME
      POSTGRES_USER: *PSQL_USER
      POSTGRES_PASSWORD: *PSQL_PASS
    volumes:
      - .:/app
      - pgvolume:/var/lib/postgresql/data

volumes:
  pgvolume: # declare a named volume to persist DB data
