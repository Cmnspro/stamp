version: "3.4"
services:

  service:
    build:
      context: .
      target: development
    ports:
      - "8080:8080"
    working_dir: /app
    volumes:
      
      # mount working directory
      # https://code.visualstudio.com/docs/remote/containers-advanced#_update-the-mount-consistency-to-delegated-for-macos
      # https://docs.docker.com/docker-for-mac/osxfs-caching/#delegated
      # the containerâ€™s view is authoritative (permit delays before updates on the container appear in the host)
      - .:/app:delegated
      
      # mount cached go pkg downloads 
      - go-pkg:/go/pkg

      # mount cached vscode container extensions
      # https://code.visualstudio.com/docs/remote/containers-advanced#_avoiding-extension-reinstalls-on-container-rebuild
      - vscode-extensions:/home/development/.vscode-server/extensions
      - vscode-extensions-insiders:/home/development/.vscode-server-insiders/extensions

    depends_on:
      - postgres
      - integresql
    environment:

      # required: env for main working database, service
      # default for sql-migrate (target development) and psql cli tool
      PGDATABASE: &PGDATABASE "development"
      PGUSER: &PGUSER "dbuser"
      PGPASSWORD: &PGPASSWORD "9bed16f749d74a3c8bfbced18a7647f5"
      PGHOST: &PGHOST "postgres"
      PGPORT: &PGPORT "5432"
      PGSSLMODE: &PGSSLMODE "disable"

      # optional: env for sql-boiler (ability to generate models out of a "spec" database)
      # sql-boiler should operate on a "spec" database only
      PSQL_DBNAME: "spec"
      PSQL_USER: *PGUSER
      PSQL_PASS: *PGPASSWORD
      PSQL_HOST: *PGHOST
      PSQL_PORT: *PGPORT
      PSQL_SSLMODE: *PGSSLMODE

      # optional: env for integresql client testing
      # INTEGRESQL_CLIENT_BASE_URL: "http://integresql:5000/api"

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"

  postgres:
    image: postgres:12.2-alpine # should be the same version as used in .drone.yml, Dockerfile and live
    command: "postgres -c 'shared_buffers=128MB' -c 'fsync=off' -c 'synchronous_commit=off' -c 'full_page_writes=off' -c 'max_connections=100' -c 'client_min_messages=warning'"
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: *PGDATABASE
      POSTGRES_USER: *PGUSER
      POSTGRES_PASSWORD: *PGPASSWORD
    volumes:
      - pgvolume:/var/lib/postgresql/data

  integresql:
    image: allaboutapps/integresql:latest
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    environment: 
      PGHOST: *PGHOST
      PGUSER: *PGUSER
      PGPASSWORD: *PGPASSWORD

volumes:
  # postgresql: declare a named volume to persist DB data
  pgvolume: 

  # go: go mod cached downloads
  go-pkg:

  # vscode: Avoiding extension reinstalls on container rebuild
  # https://code.visualstudio.com/docs/remote/containers-advanced#_avoiding-extension-reinstalls-on-container-rebuild
  vscode-extensions:
  vscode-extensions-insiders:
